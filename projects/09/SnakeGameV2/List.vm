function List.new 1
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call List.addAtTail 2
pop temp 0
push pointer 0
return
function List.getHead 0
push argument 0
pop pointer 0
push this 0
return
function List.getTail 0
push argument 0
pop pointer 0
push this 1
return
function List.setHead 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function List.setTail 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function List.print 2
push argument 0
pop pointer 0
push pointer 0
call List.getHead 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Node.getData 1
pop local 1
push constant 0
push local 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 1
push local 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push local 0
call Node.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function List.createNode 1
push argument 0
pop pointer 0
push argument 1
push constant 0
call Node.new 2
pop local 0
push local 0
return
function List.addAtTail 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
call List.createNode 2
pop local 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push local 0
pop this 1
goto IF_END0
label IF_FALSE0
push this 1
push local 0
call Node.setNext 2
pop temp 0
push local 0
pop this 1
label IF_END0
push constant 0
return
function List.addAtHead 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
call List.createNode 2
pop local 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push local 0
pop this 1
goto IF_END0
label IF_FALSE0
push local 0
push this 0
call Node.setNext 2
pop temp 0
push local 0
pop this 0
label IF_END0
push constant 0
return
function List.delFromTail 1
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 24
call String.new 1
push constant 116
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 108
call String.appendChar 2
call Output.printString 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
pop local 0
label WHILE_EXP0
push local 0
call Node.getNext 1
push this 1
eq
not
not
if-goto WHILE_END0
push local 0
call Node.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
pop this 1
push this 1
push constant 0
call Node.setNext 2
pop temp 0
label IF_END0
push constant 0
return
function List.dispose 0
push argument 0
pop pointer 0
push this 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call next.dispose 0
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
